Whem would you want to use a remote repository rather than keeping all your work local?

	If I'm working from different places, or if a group of people is involved in working
	on the project, it is good idea to have a common remote repository to keep all of
	the work at one place that is available for everyone.

Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

	Obviously, you might be currently working on an improvement or a bug fix for your
	program. This work will probably take an undefined amount of time and could stretch
	for days. If in the middle your Git will update its state, all your changes will be
	lost. And you don't want that to happen. So the pull must always be manual (as well
	as the push, for similar reasons).
	
Describe the differences between forks, clones, and branches. When would you use one
instead of another?

	Forks are clones made on GitHub exclusively. They are a copy of someone else's
	repository on GitHub to your profile's repository. You should use it if you want
	to use someone else's project as a basis for your own, for example. Clones are
	copies of repositories on your computer - both local copies and copies from GitHub.
	You should use them to store data on your computer for better working environment
	and offline availability. Branches are parts of the same repository which provide
	the option to work on different versions simultaneously or try out experimental
	features. You should use them if you want to keep a certain state of your work
	intact while working on something additional for the same project at the same time.
	
What is the benefit of having a copy of the last known state of the remote stored locally?

	It gives Git an option to compare what changes were made locally to what was pulled
	the last time. Additionally, that way Git can also see whether changes were made remotely
	since the last pull and determine whether fast-forward merge is possible.
	
How would you collaborate without using Git or GitHub? What would be easier, and what would
be harder?

	I suppose that without version control workflow like Git & GitHub, the only option to
	collaborate is to have each person do a separate thing on the project, with separate
	files and codes. Git & GitHub allows to have different people work on different features
	of the same code. Fixing different bugs or otherwise working on the same file at the same
	time. It is definitely much easier and more efficient.
	
When would you want to make changes in a separate branch rather than directly in master?
What benefits does each approach have?

	If you want to introduce a change that is optional, or requires approval before submitting
	into a larger working project, you'll want to use a separate branch. It will allow a
	separate examination from others and if approved, it will be easy to merge into the main
	branch even if other improvements have been introduced meanwhile.
	The benefit of making changes directly in the master is of course that it's much simpler.
	But this approach is generally more suitable for solo projects.